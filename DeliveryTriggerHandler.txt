public class DeliveryTriggerHandler {
    public static void createDelivery(List<Delivery__c> Deliveries){
        Delivery__c Delivery = Deliveries[0];
        if (Delivery.Delivered__c){
            setRentalPeriod(Delivery);
        }
        
    }
    public static void updateDelivery(List<Delivery__c> DeliveriesNew, List<Delivery__c> DeliveriesOld){
        Delivery__c DeliveryOld = DeliveriesOld[0];
        Delivery__c DeliveryNew = DeliveriesNew[0];
        checkForDelivery(DeliveryOld);
        if (DeliveryNew.Delivered__c){
            setRentalPeriod(DeliveryNew);
        }
    }
    public static void checkForDelivery(Delivery__c Delivery){
        if (Delivery.Delivered__c){
            Delivery.addError('Already Delivered, cannot make any changes');
        }
        
    }
    public static void setRentalPeriod(Delivery__c Delivery){
        Installer__c installer = [SELECT name FROM Installer__c WHERE ID =: Delivery.Installer__c];
        List<Rental_Line__c> Rentals = [SELECT name, Rental__c FROM Rental_Line__c WHERE Delivery__c =: Delivery.ID];
        List<Rental_Period__c> newRentalPeriods = new List<Rental_Period__c>();
        For(Rental_Line__c rentalLine : Rentals){
            Rental_Period__c rentalPeriod = new Rental_Period__c(Rental__c = rentalLine.Rental__c, Installer__c = installer.Id);
            rentalPeriod.Start_Date__c = Delivery.Delivery_Date__c;
            Switch on Delivery.Rental_Period__c{
                when '24 Hour'{
                    rentalPeriod.End_Date__c = Delivery.Delivery_Date__c + 1;
                }
                when '48 Hour'{
                    rentalPeriod.End_Date__c = Delivery.Delivery_Date__c + 2;
                }
            }
           	newRentalPeriods.add(rentalPeriod);
        }
        Insert newRentalPeriods;
    }
}